apply plugin: 'java'
apply plugin: 'eclipse'

//classPath = "GUIPack.Home"

repositories {     mavenCentral()   }
dependencies {     implementation 'org.xerial:sqlite-jdbc:+'   }
// https://mvnrepository.com/artifact/de.micromata.jak/JavaAPIforKml
dependencies{
	compile group: 'de.micromata.jak', name: 'JavaAPIforKml', version: '2.+'
}
// https://mvnrepository.com/artifact/com.jgoodies/jgoodies-forms
dependencies{
	compile group: 'com.jgoodies', name: 'jgoodies-forms', version: '1.+'
}
// https://mvnrepository.com/artifact/mysql/mysql-connector-java
dependencies{
	implementation group: 'mysql', name: 'mysql-connector-java', version: '5.+'
}
// https://mvnrepository.com/artifact/javax.xml.bind/jaxb-api
dependencies{
	compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.+'
}
// https://mvnrepository.com/artifact/com.miglayout/miglayout-swing
dependencies{
	compile group: 'com.miglayout', name: 'miglayout-swing', version: '5.+'
}
dependencies{
	// https://mvnrepository.com/artifact/junit/junit
	testCompile group: 'junit', name: 'junit', version: '4.+'
}
//Make executable jar file
//https://stackoverflow.com/questions/21721119/creating-runnable-jar-with-gradle
jar {
    manifest {
        attributes 'Main-Class': 'GUIPack.Home'
    }
}
task zip(type: Zip) {
	doLast{
		from 'src/'
		into('libs') {
			from configurations.runtime
	}	}
}
//Create javadoc
//https://docs.gradle.org/current/dsl/org.gradle.api.tasks.javadoc.Javadoc.html
task myJavadocs(type: Javadoc) {
  source = sourceSets.main.allJava
}
build.finalizedBy(myJavadocs)